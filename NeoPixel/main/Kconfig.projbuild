menu "NeoPixel configuration"
  menu "LED configuration"
    config NP_NEOPIXEL_PIN
      int "NeoPixel pin"
      range 0 16
      default 4
      help
        Pin used for the NeoPixel strip. Adafruit recommends using a PWM pin,
        which is pretty much limited to GPIO4 since the rest are used for SPI.
        Only one strand is supported at this time.
    config NP_NEOPIXEL_COUNT
      int "LED count"
      range 1 4096
      default 30
      help
        Number of pixels on the strand. Due to the single-strand limit, don't 
        set this too high, or else signal degredation will occur.
        Also, this is used for calculating the size of the stream buffer for
        all inputs regardless of type.
  endmenu
  menu "SPI configuration"
    config NP_SPI_HANDSHAKE
      int "SPI handshake pin"
      range 0 16
      default 5
      help
        This pin connects to the handshake on the HTTP-WiFi device.
        Must be the same between the two if the modules are stacked.
  endmenu
  menu "FreeRTOS configuration"
    config NP_QUEUE_SIZE
      int "SPI to ANP queue size"
      range 1 32
      default 4
      help
        Each item in the queue contains one metadata struct and either
        a. one or more static pattern commands
        b. a single dynamic pattern command
    menuconfig NP_ENABLE_STATIC_PATTERN
      bool "Enable static pattern support"
      default y
      help
        Receive commands from the HTTP-WiFi device specifying predetermined
        pixel-changing patterns.
    config NP_STATIC_PATTERN_ARRAY_SIZE
      depends on NP_ENABLE_STATIC_PATTERN
      int "Static pattern array size"
      range 1 32
      default 4
      help
        Number of static pattern structs to be able to receive grouped together 
        at one time. Each pattern data transmission will have a metadata struct
        and several static pattern structs.
    config NP_ENABLE_DYNAMIC_PATTERN
      bool "Enable dynamic pattern support"
      default n
      help
        Receive custom commands directly from the HTTP-WiFi device, allowing for much
        more fine-grained control.
        Please note that this is very computationally expensive in all regards, 
        as well as being experimental / unstable in general. It's primarily
        for the case when OTA updates are in use, and thus only the HTTP-WiFi
        device can be outfitted with new patterns.
  endmenu
endmenu
