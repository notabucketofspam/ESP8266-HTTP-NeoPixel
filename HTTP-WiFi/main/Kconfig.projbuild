menu "HTTP-WiFi configuration"
  menu "LED configuration"
    config HW_NEOPIXEL_COUNT
      int "LED count"
      range 1 4096
      default 30
      help
        Number of pixels on the strand. Due to the single-strand limit, don't 
        set this too high, or else signal degredation will occur.
        Also, this is now used for calculating the size of the stream buffer.
  endmenu
  menu "WiFi configuration"
    config HW_WIFI_SSID
      string "WiFi SSID"
      default "AzureDiamond"
      help
        SSID (network name) to connect to.
    config HW_WIFI_PASSWORD
      string "WiFi Password"
      default "hunter2"
      help
        WiFi password (WPA or WPA2) to use.
    menuconfig HW_STATIC_IP_ADDR
      bool "Enable static IP address"
      default y
      help
        Useful for finding the HTTP-WiFi device on a large network.
        Make sure to reserve its MAC on your access point as well.
    menu "IP address"
      depends on HW_STATIC_IP_ADDR
      config HW_IP_ADDR_1
        int "IP address part 1"
        range 0 255
        default 192
      config HW_IP_ADDR_2
        int "IP address part 2"
        range 0 255
        default 168
      config HW_IP_ADDR_3
        int "IP address part 3"
        range 0 255
        default 1
      config HW_IP_ADDR_4
        int "IP address part 4"
        range 0 255
        default 2
    endmenu
    menu "Netmask"
      depends on HW_STATIC_IP_ADDR
      config HW_NETMASK_ADDR_1
        int "Netmask part 1"
        range 0 255
        default 255
      config HW_NETMASK_ADDR_2
        int "Netmask part 2"
        range 0 255
        default 255
      config HW_NETMASK_ADDR_3
        int "Netmask part 3"
        range 0 255
        default 255
      config HW_NETMASK_ADDR_4
        int "Netmask part 4"
        range 0 255
        default 0
    endmenu
    menu "Gateway address"
      depends on HW_STATIC_IP_ADDR
      config HW_GW_ADDR_1
        int "Gateway address part 1"
        range 0 255
        default 192
      config HW_GW_ADDR_2
        int "Gateway address part 2"
        range 0 255
        default 168
      config HW_GW_ADDR_3
        int "Gateway address part 3"
        range 0 255
        default 1
      config HW_GW_ADDR_4
        int "Gateway address part 4"
        range 0 255
        default 1
    endmenu
    config HW_WIFI_TIMEOUT
      int "Connection timeout"
      range 1 300
      default 30
      help
        Time in seconds before WiFi connection is deemed a failure.
    config HW_WIFI_RETRY_MAX
      int "Retry connection maximum"
      range 0 100
      default 6
      help
        Number of times to attempt to connect to WiFi before giving up and
        restarting the device.
    choice HW_WIFI_PROTOCOL_SELECT
      prompt "WiFi protocol"
      default HW_WIFI_PROTOCOL_BG
      help
        Which combination of IEEE 802.11 network PHY standards to utilize
      config HW_WIFI_PROTOCOL_B
        bool "802.11b"
      config HW_WIFI_PROTOCOL_BG
        bool "802.11bg"
      config HW_WIFI_PROTOCOL_BGN
        bool "802.11bgn"
    endchoice
    config HW_WIFI_PROTOCOL
      int
      default 1 if HW_WIFI_PROTOCOL_B
      default 3 if HW_WIFI_PROTOCOL_BG
      default 7 if HW_WIFI_PROTOCOL_BGN
  endmenu
  menu "SPI configuration"
    config HW_SPI_HANDSHAKE
      int "SPI handshake pin"
      range 0 16
      default 5
      help
        This pin connects to the handshake on the NeoPixel device.
        Must be the same between the two if the modules are stacked.
    choice HW_SPI_CLK_DIV_SELECT
      prompt "SPI clock division"
      default HW_SPI_10MHZ
      help
        Understand that it cannot be faster than the NeoPixel device can handle.
        Max recommended is 20 MHz but even that's a bit of a stretch.
      config HW_SPI_2MHZ
        bool "2 MHz"
      config HW_SPI_4MHZ
        bool "4 MHz"
      config HW_SPI_5MHZ
        bool "5 MHz"
      config HW_SPI_8MHZ
        bool "8 MHz"
      config HW_SPI_10MHZ
        bool "10 MHz"
      config HW_SPI_16MHZ
        bool "16 MHz"
      config HW_SPI_20MHZ
        bool "20 MHz"
      config HW_SPI_40MHZ
        bool "40 MHz"
      config HW_SPI_80MHZ
        bool "80 MHz"
    endchoice
    config HW_SPI_CLK_DIV
      int
      default 40 if HW_SPI_2MHZ
      default 20 if HW_SPI_4MHZ
      default 16 if HW_SPI_5MHZ
      default 10 if HW_SPI_8MHZ
      default  8 if HW_SPI_10MHZ
      default  5 if HW_SPI_16MHZ
      default  4 if HW_SPI_20MHZ
      default  2 if HW_SPI_40MHZ
      default  1 if HW_SPI_80MHZ
  endmenu
  menu "FreeRTOS configuration"
    config HW_QUEUE_SIZE
      int "HTTP to SPI queue size"
      range 1 32
      default 4
      help
        Each item in the queue contains one metadata struct and either
        a. one or more static pattern commands
        b. a single dynamic pattern command
    menuconfig HW_ENABLE_STATIC_PATTERN
      bool "Enable static pattern support"
      default y
      help
        Send commands to the NeoPixel device specifying predetermined
        pixel-changing patterns.
        This is more stable than the dynamic patterns, but takes significantly
        more memory due to each specified segment having its own task.
    config HW_STATIC_PATTERN_ARRAY_SIZE
      depends on HW_ENABLE_STATIC_PATTERN
      int "Static pattern array size"
      range 1 32
      default 8
      help
        Number of static pattern structs to be able to send grouped together 
        at one time. Each pattern data transmission will have a metadata struct
        and several static pattern structs.
    menuconfig HW_ENABLE_DYNAMIC_PATTERN
      bool "Enable dynamic pattern support"
      default n
      help
        Send custom commands directly to the NeoPixel device, allowing for much
        more fine-grained control.
        Please note that this is very computationally expensive in all regards, as well as
        being experimental / unstable in general. On the other hand, it 
        (theoretically) takes less RAM to utilize, since all commands are 
        processed in a single task.
    config HW_STREAM_BUFFER_SIZE
      depends on HW_ENABLE_DYNAMIC_PATTERN
      int "HTTP to SPI stream buffer size"
      range 64 32768
      default 2048
      help
        Used for dynamic patterns. Don't set it too low if doing complex things.
        Keep in mind that SPI transfers on the ESP8266 are always a max of 
        64-bytes at a time, so please make this a multiple of 64 if you can.
        Note that each pixel requires 8-bytes; 4-bytes for the pixel index bitfield, and
        4-bytes for the color.
        TLDR: roof(NEOPIXEL_COUNT * 8 / 64) * 64
        Update: this value is no longer used, set NeoPixel count instead.
  endmenu
endmenu
